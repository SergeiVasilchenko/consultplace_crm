version: '3'

volumes:
  consultplace_data:
  # create static volume: docker volume create static
  static_volume:
  media_volume:



services:

  db:
    image: postgres:13.10
    env_file: .env
    volumes:
      - consultplace_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}


  backend:
    image: sergeivasilchenko/crm_leo-backend:latest
    # build: ./consultplace/
    env_file: .env
    volumes:
     - static_volume:/app/static/
     - media_volume:/app/media/
    depends_on:
      - db
      - redis
    # ports:
    #   - 8000:8000
    environment:
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}

  redis:
    image: redis:7.0.11
    ports:
      - "6379:6379"

  bot:
    image: sergeivasilchenko/crm_leo-bot:latest
    # build: ./bot
    env_file: ./bot/.env
    depends_on:
      - redis
      - db
      - backend
      - nginx
    # environment:
    #   BOT_TOKEN: ${BOT_TOKEN}
    #   AI_TOKEN: ${AI_TOKEN}
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost:8000/api/students/create/"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3

  celery:
    image: sergeivasilchenko/crm_leo-backend:latest
    #image: crm_leo-backend
    env_file: .env
    command: celery -A account worker --loglevel=info
    depends_on:
      - redis
      - backend
    volumes:
      - static_volume:/app/static/
      - media_volume:/app/media/
    environment:
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}

  celery-beat:
    image: sergeivasilchenko/crm_leo-backend:latest
    volumes:
      - static_volume:/app/static/
      - media_volume:/app/media/
    env_file: .env
    command: celery -A account beat --loglevel=info
    depends_on:
      - celery
      - redis
      - db
    environment:
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}



  nginx:
    image: sergeivasilchenko/crm_leo-nginx:latest
    # build: ./gateway/
    # image: nginx:1.19.3
    ports:
      - "80:80"
    volumes:
      # - ./gateway/nginx.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/usr/share/nginx/html/static/
      - media_volume:/usr/share/nginx/html/media/
    depends_on:
      - backend
