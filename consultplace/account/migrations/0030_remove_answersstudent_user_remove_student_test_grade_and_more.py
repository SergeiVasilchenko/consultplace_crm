# Generated by Django 4.2.3 on 2024-07-19 04:56

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('account', '0029_projectinvitation_students'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='answersstudent',
            name='user',
        ),
        migrations.RemoveField(
            model_name='student',
            name='test_grade',
        ),
        migrations.AddField(
            model_name='answersstudent',
            name='created_at',
            field=models.DateTimeField(default=django.utils.timezone.now, verbose_name='Создано'),
        ),
        migrations.AddField(
            model_name='answersstudent',
            name='deadline_compliance',
            field=models.FloatField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(1)], verbose_name='Соблюдение дедлайнов'),
        ),
        migrations.AddField(
            model_name='answersstudent',
            name='intricacy_coefficient',
            field=models.FloatField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(2)], verbose_name='Коэффициент сложности'),
        ),
        migrations.AddField(
            model_name='answersstudent',
            name='manager_recommendation',
            field=models.FloatField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(2)], verbose_name='Рекомендация менеджера'),
        ),
        migrations.AddField(
            model_name='answersstudent',
            name='personal_grade',
            field=models.FloatField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(2)], verbose_name='Оценка по проекту'),
        ),
        migrations.AddField(
            model_name='answersstudent',
            name='task_credits',
            field=models.FloatField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(30)], verbose_name='Кредиты'),
        ),
        migrations.AddField(
            model_name='taskstudent',
            name='material',
            field=models.TextField(blank=True, null=True, verbose_name='Материалы'),
        ),
        migrations.AddField(
            model_name='taskstudent',
            name='notice',
            field=models.TextField(blank=True, null=True, verbose_name='Примечание'),
        ),
        migrations.AddField(
            model_name='taskstudent',
            name='title',
            field=models.CharField(blank=True, max_length=250, null=True, verbose_name='Заголовок'),
        ),
        migrations.AlterField(
            model_name='taskstudent',
            name='deadline_compliance',
            field=models.FloatField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(1)], verbose_name='Соблюдение дедлайнов'),
        ),
        migrations.AlterField(
            model_name='taskstudent',
            name='personal_grade',
            field=models.FloatField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(2)], verbose_name='Оценка по проекту'),
        ),
        migrations.AlterField(
            model_name='taskstudent',
            name='task_credits',
            field=models.FloatField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(30)], verbose_name='Кредиты'),
        ),
        migrations.CreateModel(
            name='TaskStudentDataKnowledge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dataknowledge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='taskstudent_dataknowledge_set', to='account.dataknowledgegeneral')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='taskstudent_dataknowledge_set', to='account.taskstudent')),
            ],
            options={
                'unique_together': {('task', 'dataknowledge')},
            },
        ),
        migrations.AddField(
            model_name='taskstudent',
            name='pinned_dataknowledge',
            field=models.ManyToManyField(related_name='pinned_taskdataknowledge', through='account.TaskStudentDataKnowledge', to='account.dataknowledgegeneral', verbose_name='Методология'),
        ),
    ]
